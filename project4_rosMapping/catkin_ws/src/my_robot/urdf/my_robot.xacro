<?xml version='1.0'?>

<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find my_robot)/urdf/my_robot.gazebo" />
  <link name="robot_footprint"></link>

  <joint name="robot_footprint_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="robot_footprint" />
    <child link="chassis" />
  </joint>

  <link name='chassis'>
    <pose>0 0 0.12 0 0 0</pose>

    <inertial>
      <mass value="10.0" />
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1" />
    </inertial>

    <visual name='chassis_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0" />
      <geometry>
        <cylinder radius="0.08" length="0.05" />
      </geometry>
    </visual>
    <collision name='chassis_collision'>
      <origin xyz="0 0 0" rpy=" 0 0 0" />
      <geometry>
        <cylinder radius="0.08" length="0.05" />
      </geometry>
    </collision>

    <xacro:property name="tube_radius" value="0.01" />
    <xacro:property name="caster_offset" value="0.25" />
    <xacro:property name="camera_size" value="0.05" />

    <!-- Could also add collision for the tubes, but it should be fine for this project. -->
    <!-- Also note that named visuals do not get the material/color, so we have to remove it. -->
    <visual> <!-- name='wheel_axle' -->
      <origin xyz="0 0 0" rpy="1.5707 0 0" />
      <geometry>
        <cylinder radius="${tube_radius}" length="${0.32 - 0.12 - 0.002}"/> <!-- just shy of touching wheels -->
      </geometry>
    </visual>
    <visual> <!-- name='middle_beam_v' -->
      <origin xyz="0 0 ${camera_size * 0.5}" rpy=" 0 0 0" />
      <geometry>
        <cylinder radius="${tube_radius}" length="${camera_size}"/>
      </geometry>
    </visual>
    <visual> <!-- name='middle_beam_h' -->
      <origin xyz="${camera_size * 0.5} 0 ${camera_size}" rpy="0 1.5707 0" />
      <geometry>
        <cylinder radius="${tube_radius}" length="${caster_offset * 2 + camera_size}"/>
      </geometry>
    </visual>
    <visual> <!-- name='front_leg_vis' -->
      <origin xyz="${caster_offset} 0 0.05" rpy=" 0 0 0" />
      <geometry>
        <cylinder radius="${tube_radius}" length="0.24"/>
      </geometry>
    </visual>
    <visual> <!-- name='back_leg_vis' -->
      <origin xyz="-${caster_offset} 0 ${(camera_size - 0.07) / 2}" rpy=" 0 0 0" />
      <geometry>
        <cylinder radius="${tube_radius}" length="${camera_size + 0.07}"/>
      </geometry>
    </visual>
    <visual> <!-- name='back_leg_ballcap' -->
      <origin xyz="-${caster_offset} 0 ${camera_size}" rpy=" 0 0 0" />
      <geometry>
        <sphere radius="${tube_radius}"/>
      </geometry>
    </visual>

    <!-- front caster -->
    <visual name='front_caster_vis'>
      <origin xyz="${caster_offset} 0 -0.07" rpy=" 0 0 0" />
      <geometry>
        <sphere radius="0.05" />
      </geometry>
    </visual>
    <collision name='front_caster_col'>
      <origin xyz="${caster_offset} 0 -0.07" rpy=" 0 0 0" />
      <geometry>
        <sphere radius="0.0499" />
      </geometry>
    </collision>

    <!-- back caster -->
    <visual name='back_caster_vis'>
      <origin xyz="-${caster_offset} 0 -0.07" rpy=" 0 0 0" />
      <geometry>
        <sphere radius="0.05" />
      </geometry>
    </visual>
    <collision name='back_caster_col'>
      <origin xyz="-${caster_offset} 0 -0.07" rpy=" 0 0 0" />
      <geometry>
        <sphere radius="0.0499" />
      </geometry>
    </collision>    

  </link>


  <!-- ***************************** LEFT WHEEL ***************************** -->

  <link name='left_wheel'>

    <inertial>
      <mass value="15.0" />
      <origin xyz="0.0 0 0" rpy="0 1.5707 1.5707" />
      <!-- Solid cylinder moment of inertia with length along Y:
        Iy = 1/2 * m * r^2
        Ix = Iz = 1/12 * m * (3r^2 + h^2)
        Original m = 5, r = 0.1, l = 0.05 
          iy     => 5/2   * (0.01)          = 0.025
          ix, iz => 5/12  * (0.03 + 0.0025) = 0.013
        New      m = 5, r = 0.12, l = 0.12
          iy     => 5/2   * (0.0144)          = 0.036
          ix, iz => 5/12  * (0.0432 + 0.0144) = 0.024
       -->
      <inertia ixx="0.024" ixy="0" ixz="0" iyy="0.036" iyz="0" izz="0.024" />
    </inertial>

    <collision name='collision'>
      <origin xyz="0.0 0 0" rpy="0 1.5707 1.5707" />
      <geometry>
        <cylinder radius=".12" length=".12" />
      </geometry>
    </collision>

    <visual>
      <origin xyz="0.0 0 0" rpy="0 1.5707 1.5707" />
      <geometry>
        <cylinder radius=".12" length=".12" />
      </geometry>
    </visual>

  </link>

  <joint type="continuous" name="left_wheel_hinge">
    <origin xyz="0 0.16 0" rpy="0 0 0" />
    <child link="left_wheel" />
    <parent link="chassis" />
    <axis xyz="0 1 0" rpy="0 0 0" />
    <limit effort="10000" velocity="1000" />
    <dynamics damping="1.0" friction="1.0" />
  </joint>

  <!-- ***************************** RIGHT WHEEL ***************************** -->

  <link name='right_wheel'>

    <inertial>
      <mass value="15.0" />
      <origin xyz="0.0 0 0" rpy="0 1.5707 1.5707" />
      <inertia ixx="0.024" ixy="0" ixz="0" iyy="0.036" iyz="0" izz="0.024" />
    </inertial>

    <collision name='collision'>
      <origin xyz="0.0 0 0" rpy="0 1.5707 1.5707" />
      <geometry>
        <cylinder radius=".12" length=".12" />
      </geometry>
    </collision>

    <visual>
      <origin xyz="0.0 0 0" rpy="0 1.5707 1.5707" />
      <geometry>
        <cylinder radius=".12" length=".12" />
      </geometry>
    </visual>

  </link>

  <joint type="continuous" name="right_wheel_hinge">
    <origin xyz="0 -0.16 0" rpy="0 0 0" />
    <child link="right_wheel" />
    <parent link="chassis" />
    <axis xyz="0 1 0" rpy="0 0 0" />
    <limit effort="10000" velocity="1000" />
    <dynamics damping="1.0" friction="1.0" />
  </joint>

  <!-- ***************************** CAMERA ***************************** -->
  <link name="camera_link">
    <origin xyz="0.0 0.0 0" rpy="0.0 0.0 0.0" />

    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}" />
      </geometry>
    </visual>

    <collision name="camera_col">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}" />
      </geometry>
    </collision>

    <inertial>
      <!-- <origin xyz="0.05 0.05 0.05" rpy="0.0 0.0 0.0"/> -->
      <mass value="1e-5" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="${caster_offset + camera_size} 0.0 ${camera_size}" rpy="0.0 0.0 0.0" />
    <parent link="chassis" />
    <child link="camera_link" />
    <axis xyz="0.0 1.0 0.0" />
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" />
  </joint>

  <!-- ***************************** RGB-D CAMERA ***************************** -->
  <!-- 
      This fixes the depth information being rotated.
      See https://github.com/ros-simulation/gazebo_ros_pkgs/issues/243 
  -->
  <link name="camera_link_optical">
  </link> 

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.5707 0 -1.5707"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>


  <!-- ***************************** LIDAR ***************************** -->
  <link name="hokuyo">
    <inertial>
      <mass value="1e-5" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <visual name="">
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://my_robot/meshes/hokuyo.dae" scale="1 1 1" />
      </geometry>
    </collision>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="${caster_offset} 0.0 0.2" rpy="0.0 0.0 0.0" />
    <parent link="chassis" />
    <child link="hokuyo" />
    <axis xyz="0.0 1.0 0.0" />
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" />
  </joint>

  <!-- ***************************** MATERIALS ***************************** -->

  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="left_wheel">
    <material>Gazebo/Gray</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <material>Gazebo/Gray</material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="hokuyo">
    <material>Gazebo/Black</material>
  </gazebo>

</robot>